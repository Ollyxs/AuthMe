#obtenemos la imagen de un kernel de Linux con python
FROM python:3.10-slim-bullseye


ENV FLASK_DEBUG=production 
ENV PROD_DATABASE_URI=""
ENV PYTHONUNBUFFERED=1
ENV PATH=$PATH:/home/flaskapp/.local/bin
ENV REDIS_PASSWORD=${REDIS_PASSWORD}

#crea usuario
RUN useradd --create-home --home-dir /home/flaskapp flaskapp

#seleccionar la carpeta de usuario
WORKDIR /home/flaskapp
#instala dependencias del sistema
RUN apt-get update
RUN apt-get install -y curl gcc g++ libffi-dev libssl-dev build-essential default-mysql-client python3-mysqldb libmariadb-dev
RUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
RUN rm -rf /var/lib/apt/lists/*

USER flaskapp
RUN mkdir app
#copia la carpeta del proyecto a la imagen
COPY ./main ./main
 
COPY ./app.py .

ADD requirements.txt ./requirements.txt

RUN pip install --no-cache-dir -r requirements.txt
RUN pip install gevent gunicorn==20.1.0

#puerto por el que escucha la imagen
EXPOSE 6000

#HEALTHCHECK --interval=10s --timeout=10s --start-period=55s
#CMD curl -f --retry 10 --max-time 15 --retry-delay 10 --retry-max-time 60 "http://localhost:5000/api/v1/health" || exit 1

#ejecuta la aplicaci√≥n
#CMD ["gunicorn", "--workers", "1", "--log-level", "INFO", "--bind", "0.0.0.0:5000", "app:create_app()"]
CMD [ "python", "./app.py" ]